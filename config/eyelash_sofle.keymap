#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    time-to-max-speed-ms = <0>;       // 300
    delay-ms = <0>;                   // 0
    trigger-period-ms = <0>;
};

&mmv {
    time-to-max-speed-ms = <0>; // Default 500
    acceleration-exponent = <0>; // Default 0
    trigger-period-ms = <16>;
};

&soft_off { hold-time-ms = <2000>; };

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    homerow_mods: homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS";
        bindings = <&kp>, <&kp>;

        #binding-cells = <2>;
        tapping-term-ms = <200>;
        flavor = "tap-preferred";
        quick-tap-ms = <200>;
    };

    layer_quick_tab: layer_quick_tab {
        compatible = "zmk,behavior-hold-tap";
        label = "LAYER_QUICK_TAB";
        bindings = <&mo>, <&kp>;

        #binding-cells = <2>;
        tapping-term-ms = <300>;
        flavor = "hold-preferred";
        quick-tap-ms = <130>;
        require-prior-idle-ms = <125>;
    };

    mouse_click_key: mouse_click_key {
        compatible = "zmk,behavior-hold-tap";
        label = "MOUSE_CLICK_KEY";
        bindings = <&mkp>, <&mkp>;

        #binding-cells = <2>;
        tapping-term-ms = <150>;
    };

    knob_mouse_scroll: knob_mouse_scroll {
        compatible = "zmk,behavior-sensor-rotate";
        label = "KNOB_MOUSE_SCROLL";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;
    };

    mouse_click_tab_dance: mouse_click_tab_dance {
        compatible = "zmk,behavior-tap-dance";
        label = "MOUSE_CLICK_TAB_DANCE";
        #binding-cells = <0>;
        bindings = <&mkp LCLK>, <&mouse_click_key RCLK LCLK>;
    };

    behaviors {
    };

    combos {
        compatible = "zmk,combos";

        softoff {
            bindings = <&soft_off>;
            key-positions = <14 28 40>;
        };

        toggle_joystick_layer {
            bindings = <&tog 1>;
            key-positions = <57 59>;
        };

        backspace {
            bindings = <&kp BACKSPACE>;
            key-positions = <34 35>;
        };
    };

    macros {
        mouse_double_click: mouse_double_click {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&mkp LCLK>, <&macro_wait_time 25>, <&mkp LCLK>;

            label = "MOUSE_DOUBLE_CLICK";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        NormalLayer {
            bindings = <
&kp ESC     &kp N1                  &kp N2        &kp N3        &kp N4     &kp N5       &mmv MOVE_Y(-200)  &kp N6                        &kp N7     &kp N8     &kp N9           &kp N0      &none
&kp TAB     &kp Q                   &kp W         &kp E         &kp R      &kp T        &mmv MOVE_Y(200)   &kp Y                         &kp U      &kp I      &kp O            &kp P       &none
&kp LCTRL   &kp A                   &kp S         &kp D         &kp F      &kp G        &mmv MOVE_X(-200)  &kp H                         &kp J      &kp K      &kp L            &kp SEMI    &kp APOS
&kp LSHFT   &kp Z                   &kp X         &kp C         &kp V      &kp B        &mmv MOVE_X(200)   &kp N                         &kp M      &kp COMMA  &kp DOT          &kp SLASH   &kp RSHFT
&kp C_MUTE  &mouse_click_tab_dance  &kp LEFT_GUI  &kp LEFT_ALT  &kp SPACE  &lt 3 ESC    &mkp LCLK          &layer_quick_tab 2 BACKSPACE  &kp ENTER  &kp RALT   &kp RIGHT_SHIFT  &kp DELETE
            >;

            sensor-bindings = <&knob_mouse_scroll>;
            display-name = "NormalLayer";
        };

        JoystickLayer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &mmv MOVE_Y(-500)  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &mmv MOVE_Y(500)   &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &mmv MOVE_X(-500)  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &mmv MOVE_X(500)   &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans             &trans  &trans  &trans  &trans  &trans
            >;

            sensor-bindings = <&knob_mouse_scroll>;
            label = "JoystickLayer";
        };

        RThumbLayer {
            bindings = <
&none  &none                  &none                &none                  &none                  &none                     &none  &none                   &none                  &none                   &none                  &none                  &none
&none  &homerow_mods EXCL N1  &homerow_mods AT N2  &homerow_mods HASH N3  &homerow_mods DLLR N4  &homerow_mods PRCNT N5    &none  &homerow_mods CARET N6  &homerow_mods AMPS N7  &homerow_mods ASTRK N8  &homerow_mods LPAR N9  &homerow_mods RPAR N0  &none
&none  &none                  &none                &none                  &none                  &none                     &none  &kp PG_UP               &kp HOME               &kp UP                  &kp END                &none                  &none
&none  &none                  &kp K_PREV           &kp C_PLAY_PAUSE       &kp C_NEXT             &none                     &none  &kp PG_DN               &kp LEFT               &kp DOWN                &kp RIGHT              &none                  &none
&none  &trans                 &trans               &trans                 &trans                 &trans                    &none  &trans                  &trans                 &trans                  &trans                 &trans
            >;

            display-name = "RThumbLayer";
            sensor-bindings = <&scroll_encoder>;
        };

        LThumbLayer {
            bindings = <
&trans   &trans     &trans     &trans     &trans     &trans    &trans     &kp KP_NUMLOCK   &trans           &trans           &trans            &trans             &trans
&kp ESC  &trans     &trans     &trans     &kp LC(R)  &trans    &trans     &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &trans
&trans   &kp LC(A)  &kp LC(S)  &kp LC(D)  &trans     &trans    &trans     &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp MINUS         &kp EQUAL          &kp GRAVE
&trans   &kp LC(Z)  &kp LC(X)  &kp LC(C)  &kp LC(V)  &trans    &trans     &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &trans            &kp BSLH           &trans
&trans   &trans     &trans     &trans     &trans     &trans    &mkp RCLK  &trans           &kp KP_NUMBER_0  &trans           &trans            &trans
            >;

            display-name = "LThumbLayer";
            sensor-bindings = <&scroll_encoder>;
        };

        layer_1 {
            bindings = <
&kp GRAVE   &kp F1           &kp F2          &kp F3           &kp F4           &kp F5             &mmv MOVE_UP     &kp F6           &kp F7           &kp F8      &kp F9     &kp F10           &trans
&trans      &kp GRAVE        &mkp LCLK       &mkp MCLK        &mkp RCLK        &mkp MB4           &mmv MOVE_DOWN   &kp PG_UP        &kp END          &kp UP      &kp HOME   &kp MINUS         &kp EQUAL
&trans      &kp TILDE        &trans          &trans           &trans           &mkp MB5           &mmv MOVE_LEFT   &kp PG_DN        &kp LEFT         &kp DOWN    &kp RIGHT  &kp LEFT_BRACKET  &kp RIGHT_BRACKET
&trans      &rgb_ug RGB_OFF  &rgb_ug RGB_ON  &rgb_ug RGB_EFF  &rgb_ug RGB_EFR  &rgb_ug RGB_SPI    &mmv MOVE_RIGHT  &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &kp INSERT  &kp F11    &kp F12           &trans
&kp C_MUTE  &trans           &trans          &trans           &trans           &trans             &mkp LCLK        &trans           &trans           &trans      &trans     &trans
            >;

            display-name = "layer1";
            sensor-bindings = <&scroll_encoder>;
        };

        BluetoothLayer {
            bindings = <
&kp TILDE  &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &mmv MOVE_UP     &kp F6  &kp F7  &kp F8      &kp F9     &kp F10      &trans
&trans     &bt BT_CLR    &bt BT_CLR_ALL  &trans        &trans        &trans          &mmv MOVE_DOWN   &trans  &trans  &kp F11     &kp F12    &kp UNDER    &kp PLUS
&trans     &out OUT_USB  &out OUT_BLE    &trans        &trans        &trans          &mmv MOVE_LEFT   &trans  &trans  &trans      &trans     &kp LBRC     &kp RBRC
&trans     &sys_reset    &trans          &bootloader   &trans        &trans          &mmv MOVE_RIGHT  &trans  &trans  &sys_reset  &soft_off  &bootloader  &trans
&trans     &trans        &trans          &trans        &trans        &trans          &mkp LCLK        &trans  &trans  &trans      &trans     &trans
            >;

            display-name = "BluetoothLayer";
            sensor-bindings = <&scroll_encoder>;
        };
    };
};
